//
// Autogenerated by Thrift Compiler (0.9.1)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var Thrift = require('thrift').Thrift;

var ttypes = require('./rataservice_types');
//HELPER FUNCTIONS AND STRUCTURES

rataservice_getvisualfeeds_args = function(args) {
};
rataservice_getvisualfeeds_args.prototype = {};
rataservice_getvisualfeeds_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_getvisualfeeds_args.prototype.write = function(output) {
  output.writeStructBegin('rataservice_getvisualfeeds_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_getvisualfeeds_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
rataservice_getvisualfeeds_result.prototype = {};
rataservice_getvisualfeeds_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size0 = 0;
        var _rtmp34;
        this.success = [];
        var _etype3 = 0;
        _rtmp34 = input.readListBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = new ttypes.visualfeed();
          elem6.read(input);
          this.success.push(elem6);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_getvisualfeeds_result.prototype.write = function(output) {
  output.writeStructBegin('rataservice_getvisualfeeds_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter7 in this.success)
    {
      if (this.success.hasOwnProperty(iter7))
      {
        iter7 = this.success[iter7];
        iter7.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_setpreviewmatchingmode_args = function(args) {
  this.modesettings = null;
  if (args) {
    if (args.modesettings !== undefined) {
      this.modesettings = args.modesettings;
    }
  }
};
rataservice_setpreviewmatchingmode_args.prototype = {};
rataservice_setpreviewmatchingmode_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.modesettings = new ttypes.previewmatchingmode();
        this.modesettings.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_setpreviewmatchingmode_args.prototype.write = function(output) {
  output.writeStructBegin('rataservice_setpreviewmatchingmode_args');
  if (this.modesettings !== null && this.modesettings !== undefined) {
    output.writeFieldBegin('modesettings', Thrift.Type.STRUCT, 1);
    this.modesettings.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_setpreviewmatchingmode_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
rataservice_setpreviewmatchingmode_result.prototype = {};
rataservice_setpreviewmatchingmode_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_setpreviewmatchingmode_result.prototype.write = function(output) {
  output.writeStructBegin('rataservice_setpreviewmatchingmode_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_setVisualDataSource_args = function(args) {
  this.req = null;
  if (args) {
    if (args.req !== undefined) {
      this.req = args.req;
    }
  }
};
rataservice_setVisualDataSource_args.prototype = {};
rataservice_setVisualDataSource_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.req = new ttypes.VisualSourceRequest();
        this.req.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_setVisualDataSource_args.prototype.write = function(output) {
  output.writeStructBegin('rataservice_setVisualDataSource_args');
  if (this.req !== null && this.req !== undefined) {
    output.writeFieldBegin('req', Thrift.Type.STRUCT, 1);
    this.req.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_setVisualDataSource_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
rataservice_setVisualDataSource_result.prototype = {};
rataservice_setVisualDataSource_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_setVisualDataSource_result.prototype.write = function(output) {
  output.writeStructBegin('rataservice_setVisualDataSource_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_getDevices_args = function(args) {
};
rataservice_getDevices_args.prototype = {};
rataservice_getDevices_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_getDevices_args.prototype.write = function(output) {
  output.writeStructBegin('rataservice_getDevices_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_getDevices_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
rataservice_getDevices_result.prototype = {};
rataservice_getDevices_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size8 = 0;
        var _rtmp312;
        this.success = [];
        var _etype11 = 0;
        _rtmp312 = input.readListBegin();
        _etype11 = _rtmp312.etype;
        _size8 = _rtmp312.size;
        for (var _i13 = 0; _i13 < _size8; ++_i13)
        {
          var elem14 = null;
          elem14 = input.readString();
          this.success.push(elem14);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_getDevices_result.prototype.write = function(output) {
  output.writeStructBegin('rataservice_getDevices_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRING, this.success.length);
    for (var iter15 in this.success)
    {
      if (this.success.hasOwnProperty(iter15))
      {
        iter15 = this.success[iter15];
        output.writeString(iter15);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_getCurrentDevice_args = function(args) {
};
rataservice_getCurrentDevice_args.prototype = {};
rataservice_getCurrentDevice_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_getCurrentDevice_args.prototype.write = function(output) {
  output.writeStructBegin('rataservice_getCurrentDevice_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_getCurrentDevice_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
rataservice_getCurrentDevice_result.prototype = {};
rataservice_getCurrentDevice_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRING) {
        this.success = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_getCurrentDevice_result.prototype.write = function(output) {
  output.writeStructBegin('rataservice_getCurrentDevice_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRING, 0);
    output.writeString(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_setDevice_args = function(args) {
  this.devicename = null;
  if (args) {
    if (args.devicename !== undefined) {
      this.devicename = args.devicename;
    }
  }
};
rataservice_setDevice_args.prototype = {};
rataservice_setDevice_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.devicename = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_setDevice_args.prototype.write = function(output) {
  output.writeStructBegin('rataservice_setDevice_args');
  if (this.devicename !== null && this.devicename !== undefined) {
    output.writeFieldBegin('devicename', Thrift.Type.STRING, 1);
    output.writeString(this.devicename);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_setDevice_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
rataservice_setDevice_result.prototype = {};
rataservice_setDevice_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_setDevice_result.prototype.write = function(output) {
  output.writeStructBegin('rataservice_setDevice_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_gettempls_args = function(args) {
};
rataservice_gettempls_args.prototype = {};
rataservice_gettempls_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_gettempls_args.prototype.write = function(output) {
  output.writeStructBegin('rataservice_gettempls_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_gettempls_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
rataservice_gettempls_result.prototype = {};
rataservice_gettempls_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size16 = 0;
        var _rtmp320;
        this.success = [];
        var _etype19 = 0;
        _rtmp320 = input.readListBegin();
        _etype19 = _rtmp320.etype;
        _size16 = _rtmp320.size;
        for (var _i21 = 0; _i21 < _size16; ++_i21)
        {
          var elem22 = null;
          elem22 = input.readString();
          this.success.push(elem22);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_gettempls_result.prototype.write = function(output) {
  output.writeStructBegin('rataservice_gettempls_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRING, this.success.length);
    for (var iter23 in this.success)
    {
      if (this.success.hasOwnProperty(iter23))
      {
        iter23 = this.success[iter23];
        output.writeString(iter23);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_setfindtempl_args = function(args) {
  this.templ = null;
  if (args) {
    if (args.templ !== undefined) {
      this.templ = args.templ;
    }
  }
};
rataservice_setfindtempl_args.prototype = {};
rataservice_setfindtempl_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.templ = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_setfindtempl_args.prototype.write = function(output) {
  output.writeStructBegin('rataservice_setfindtempl_args');
  if (this.templ !== null && this.templ !== undefined) {
    output.writeFieldBegin('templ', Thrift.Type.STRING, 1);
    output.writeString(this.templ);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_setfindtempl_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
rataservice_setfindtempl_result.prototype = {};
rataservice_setfindtempl_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_setfindtempl_result.prototype.write = function(output) {
  output.writeStructBegin('rataservice_setfindtempl_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_savetempl_args = function(args) {
  this.id = null;
  this.topleft = null;
  this.bottomright = null;
  this.name = null;
  if (args) {
    if (args.id !== undefined) {
      this.id = args.id;
    }
    if (args.topleft !== undefined) {
      this.topleft = args.topleft;
    }
    if (args.bottomright !== undefined) {
      this.bottomright = args.bottomright;
    }
    if (args.name !== undefined) {
      this.name = args.name;
    }
  }
};
rataservice_savetempl_args.prototype = {};
rataservice_savetempl_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.id = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.topleft = new ttypes.Coordinate();
        this.topleft.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.bottomright = new ttypes.Coordinate();
        this.bottomright.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_savetempl_args.prototype.write = function(output) {
  output.writeStructBegin('rataservice_savetempl_args');
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I32, 1);
    output.writeI32(this.id);
    output.writeFieldEnd();
  }
  if (this.topleft !== null && this.topleft !== undefined) {
    output.writeFieldBegin('topleft', Thrift.Type.STRUCT, 2);
    this.topleft.write(output);
    output.writeFieldEnd();
  }
  if (this.bottomright !== null && this.bottomright !== undefined) {
    output.writeFieldBegin('bottomright', Thrift.Type.STRUCT, 3);
    this.bottomright.write(output);
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 4);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_savetempl_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
rataservice_savetempl_result.prototype = {};
rataservice_savetempl_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_savetempl_result.prototype.write = function(output) {
  output.writeStructBegin('rataservice_savetempl_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_savereference_args = function(args) {
  this.id = null;
  this.name = null;
  if (args) {
    if (args.id !== undefined) {
      this.id = args.id;
    }
    if (args.name !== undefined) {
      this.name = args.name;
    }
  }
};
rataservice_savereference_args.prototype = {};
rataservice_savereference_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.id = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_savereference_args.prototype.write = function(output) {
  output.writeStructBegin('rataservice_savereference_args');
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.I32, 1);
    output.writeI32(this.id);
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 2);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_savereference_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
rataservice_savereference_result.prototype = {};
rataservice_savereference_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_savereference_result.prototype.write = function(output) {
  output.writeStructBegin('rataservice_savereference_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_locked_args = function(args) {
};
rataservice_locked_args.prototype = {};
rataservice_locked_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_locked_args.prototype.write = function(output) {
  output.writeStructBegin('rataservice_locked_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_locked_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
rataservice_locked_result.prototype = {};
rataservice_locked_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_locked_result.prototype.write = function(output) {
  output.writeStructBegin('rataservice_locked_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_handleEvent_args = function(args) {
  this.e = null;
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
rataservice_handleEvent_args.prototype = {};
rataservice_handleEvent_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new ttypes.Event();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_handleEvent_args.prototype.write = function(output) {
  output.writeStructBegin('rataservice_handleEvent_args');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_handleEvent_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
rataservice_handleEvent_result.prototype = {};
rataservice_handleEvent_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.Response();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_handleEvent_result.prototype.write = function(output) {
  output.writeStructBegin('rataservice_handleEvent_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_getposition_args = function(args) {
};
rataservice_getposition_args.prototype = {};
rataservice_getposition_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_getposition_args.prototype.write = function(output) {
  output.writeStructBegin('rataservice_getposition_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_getposition_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
rataservice_getposition_result.prototype = {};
rataservice_getposition_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRING) {
        this.success = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_getposition_result.prototype.write = function(output) {
  output.writeStructBegin('rataservice_getposition_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRING, 0);
    output.writeString(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_setposition_args = function(args) {
  this.coord = null;
  if (args) {
    if (args.coord !== undefined) {
      this.coord = args.coord;
    }
  }
};
rataservice_setposition_args.prototype = {};
rataservice_setposition_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.coord = new ttypes.RobotCoord();
        this.coord.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_setposition_args.prototype.write = function(output) {
  output.writeStructBegin('rataservice_setposition_args');
  if (this.coord !== null && this.coord !== undefined) {
    output.writeFieldBegin('coord', Thrift.Type.STRUCT, 1);
    this.coord.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_setposition_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
rataservice_setposition_result.prototype = {};
rataservice_setposition_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_setposition_result.prototype.write = function(output) {
  output.writeStructBegin('rataservice_setposition_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_reloaddutconfig_args = function(args) {
  this.dutindex = null;
  if (args) {
    if (args.dutindex !== undefined) {
      this.dutindex = args.dutindex;
    }
  }
};
rataservice_reloaddutconfig_args.prototype = {};
rataservice_reloaddutconfig_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I16) {
        this.dutindex = input.readI16();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_reloaddutconfig_args.prototype.write = function(output) {
  output.writeStructBegin('rataservice_reloaddutconfig_args');
  if (this.dutindex !== null && this.dutindex !== undefined) {
    output.writeFieldBegin('dutindex', Thrift.Type.I16, 1);
    output.writeI16(this.dutindex);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataservice_reloaddutconfig_result = function(args) {
};
rataservice_reloaddutconfig_result.prototype = {};
rataservice_reloaddutconfig_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

rataservice_reloaddutconfig_result.prototype.write = function(output) {
  output.writeStructBegin('rataservice_reloaddutconfig_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

rataserviceClient = exports.Client = function(output, pClass) {
    this.output = output;
    this.pClass = pClass;
    this.seqid = 0;
    this._reqs = {};
};
rataserviceClient.prototype = {};
rataserviceClient.prototype.getvisualfeeds = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_getvisualfeeds();
};

rataserviceClient.prototype.send_getvisualfeeds = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getvisualfeeds', Thrift.MessageType.CALL, this.seqid);
  var args = new rataservice_getvisualfeeds_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

rataserviceClient.prototype.recv_getvisualfeeds = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new rataservice_getvisualfeeds_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getvisualfeeds failed: unknown result');
};
rataserviceClient.prototype.setpreviewmatchingmode = function(modesettings, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_setpreviewmatchingmode(modesettings);
};

rataserviceClient.prototype.send_setpreviewmatchingmode = function(modesettings) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('setpreviewmatchingmode', Thrift.MessageType.CALL, this.seqid);
  var args = new rataservice_setpreviewmatchingmode_args();
  args.modesettings = modesettings;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

rataserviceClient.prototype.recv_setpreviewmatchingmode = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new rataservice_setpreviewmatchingmode_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('setpreviewmatchingmode failed: unknown result');
};
rataserviceClient.prototype.setVisualDataSource = function(req, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_setVisualDataSource(req);
};

rataserviceClient.prototype.send_setVisualDataSource = function(req) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('setVisualDataSource', Thrift.MessageType.CALL, this.seqid);
  var args = new rataservice_setVisualDataSource_args();
  args.req = req;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

rataserviceClient.prototype.recv_setVisualDataSource = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new rataservice_setVisualDataSource_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('setVisualDataSource failed: unknown result');
};
rataserviceClient.prototype.getDevices = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_getDevices();
};

rataserviceClient.prototype.send_getDevices = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getDevices', Thrift.MessageType.CALL, this.seqid);
  var args = new rataservice_getDevices_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

rataserviceClient.prototype.recv_getDevices = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new rataservice_getDevices_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getDevices failed: unknown result');
};
rataserviceClient.prototype.getCurrentDevice = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_getCurrentDevice();
};

rataserviceClient.prototype.send_getCurrentDevice = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getCurrentDevice', Thrift.MessageType.CALL, this.seqid);
  var args = new rataservice_getCurrentDevice_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

rataserviceClient.prototype.recv_getCurrentDevice = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new rataservice_getCurrentDevice_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getCurrentDevice failed: unknown result');
};
rataserviceClient.prototype.setDevice = function(devicename, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_setDevice(devicename);
};

rataserviceClient.prototype.send_setDevice = function(devicename) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('setDevice', Thrift.MessageType.CALL, this.seqid);
  var args = new rataservice_setDevice_args();
  args.devicename = devicename;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

rataserviceClient.prototype.recv_setDevice = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new rataservice_setDevice_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('setDevice failed: unknown result');
};
rataserviceClient.prototype.gettempls = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_gettempls();
};

rataserviceClient.prototype.send_gettempls = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('gettempls', Thrift.MessageType.CALL, this.seqid);
  var args = new rataservice_gettempls_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

rataserviceClient.prototype.recv_gettempls = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new rataservice_gettempls_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('gettempls failed: unknown result');
};
rataserviceClient.prototype.setfindtempl = function(templ, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_setfindtempl(templ);
};

rataserviceClient.prototype.send_setfindtempl = function(templ) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('setfindtempl', Thrift.MessageType.CALL, this.seqid);
  var args = new rataservice_setfindtempl_args();
  args.templ = templ;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

rataserviceClient.prototype.recv_setfindtempl = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new rataservice_setfindtempl_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('setfindtempl failed: unknown result');
};
rataserviceClient.prototype.savetempl = function(id, topleft, bottomright, name, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_savetempl(id, topleft, bottomright, name);
};

rataserviceClient.prototype.send_savetempl = function(id, topleft, bottomright, name) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('savetempl', Thrift.MessageType.CALL, this.seqid);
  var args = new rataservice_savetempl_args();
  args.id = id;
  args.topleft = topleft;
  args.bottomright = bottomright;
  args.name = name;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

rataserviceClient.prototype.recv_savetempl = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new rataservice_savetempl_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('savetempl failed: unknown result');
};
rataserviceClient.prototype.savereference = function(id, name, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_savereference(id, name);
};

rataserviceClient.prototype.send_savereference = function(id, name) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('savereference', Thrift.MessageType.CALL, this.seqid);
  var args = new rataservice_savereference_args();
  args.id = id;
  args.name = name;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

rataserviceClient.prototype.recv_savereference = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new rataservice_savereference_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('savereference failed: unknown result');
};
rataserviceClient.prototype.locked = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_locked();
};

rataserviceClient.prototype.send_locked = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('locked', Thrift.MessageType.CALL, this.seqid);
  var args = new rataservice_locked_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

rataserviceClient.prototype.recv_locked = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new rataservice_locked_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('locked failed: unknown result');
};
rataserviceClient.prototype.handleEvent = function(e, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_handleEvent(e);
};

rataserviceClient.prototype.send_handleEvent = function(e) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('handleEvent', Thrift.MessageType.CALL, this.seqid);
  var args = new rataservice_handleEvent_args();
  args.e = e;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

rataserviceClient.prototype.recv_handleEvent = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new rataservice_handleEvent_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('handleEvent failed: unknown result');
};
rataserviceClient.prototype.getposition = function(callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_getposition();
};

rataserviceClient.prototype.send_getposition = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getposition', Thrift.MessageType.CALL, this.seqid);
  var args = new rataservice_getposition_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

rataserviceClient.prototype.recv_getposition = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new rataservice_getposition_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getposition failed: unknown result');
};
rataserviceClient.prototype.setposition = function(coord, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_setposition(coord);
};

rataserviceClient.prototype.send_setposition = function(coord) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('setposition', Thrift.MessageType.CALL, this.seqid);
  var args = new rataservice_setposition_args();
  args.coord = coord;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

rataserviceClient.prototype.recv_setposition = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new rataservice_setposition_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('setposition failed: unknown result');
};
rataserviceClient.prototype.reloaddutconfig = function(dutindex, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_reloaddutconfig(dutindex);
};

rataserviceClient.prototype.send_reloaddutconfig = function(dutindex) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('reloaddutconfig', Thrift.MessageType.CALL, this.seqid);
  var args = new rataservice_reloaddutconfig_args();
  args.dutindex = dutindex;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

rataserviceClient.prototype.recv_reloaddutconfig = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new rataservice_reloaddutconfig_result();
  result.read(input);
  input.readMessageEnd();

  callback(null)
};
rataserviceProcessor = exports.Processor = function(handler) {
  this._handler = handler
}
rataserviceProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.Exception, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
}

rataserviceProcessor.prototype.process_getvisualfeeds = function(seqid, input, output) {
  var args = new rataservice_getvisualfeeds_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.getvisualfeeds(function (err, result) {
    var result = new rataservice_getvisualfeeds_result((err != null ? err : {success: result}));
    output.writeMessageBegin("getvisualfeeds", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

rataserviceProcessor.prototype.process_setpreviewmatchingmode = function(seqid, input, output) {
  var args = new rataservice_setpreviewmatchingmode_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.setpreviewmatchingmode(args.modesettings, function (err, result) {
    var result = new rataservice_setpreviewmatchingmode_result((err != null ? err : {success: result}));
    output.writeMessageBegin("setpreviewmatchingmode", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

rataserviceProcessor.prototype.process_setVisualDataSource = function(seqid, input, output) {
  var args = new rataservice_setVisualDataSource_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.setVisualDataSource(args.req, function (err, result) {
    var result = new rataservice_setVisualDataSource_result((err != null ? err : {success: result}));
    output.writeMessageBegin("setVisualDataSource", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

rataserviceProcessor.prototype.process_getDevices = function(seqid, input, output) {
  var args = new rataservice_getDevices_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.getDevices(function (err, result) {
    var result = new rataservice_getDevices_result((err != null ? err : {success: result}));
    output.writeMessageBegin("getDevices", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

rataserviceProcessor.prototype.process_getCurrentDevice = function(seqid, input, output) {
  var args = new rataservice_getCurrentDevice_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.getCurrentDevice(function (err, result) {
    var result = new rataservice_getCurrentDevice_result((err != null ? err : {success: result}));
    output.writeMessageBegin("getCurrentDevice", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

rataserviceProcessor.prototype.process_setDevice = function(seqid, input, output) {
  var args = new rataservice_setDevice_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.setDevice(args.devicename, function (err, result) {
    var result = new rataservice_setDevice_result((err != null ? err : {success: result}));
    output.writeMessageBegin("setDevice", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

rataserviceProcessor.prototype.process_gettempls = function(seqid, input, output) {
  var args = new rataservice_gettempls_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.gettempls(function (err, result) {
    var result = new rataservice_gettempls_result((err != null ? err : {success: result}));
    output.writeMessageBegin("gettempls", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

rataserviceProcessor.prototype.process_setfindtempl = function(seqid, input, output) {
  var args = new rataservice_setfindtempl_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.setfindtempl(args.templ, function (err, result) {
    var result = new rataservice_setfindtempl_result((err != null ? err : {success: result}));
    output.writeMessageBegin("setfindtempl", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

rataserviceProcessor.prototype.process_savetempl = function(seqid, input, output) {
  var args = new rataservice_savetempl_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.savetempl(args.id, args.topleft, args.bottomright, args.name, function (err, result) {
    var result = new rataservice_savetempl_result((err != null ? err : {success: result}));
    output.writeMessageBegin("savetempl", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

rataserviceProcessor.prototype.process_savereference = function(seqid, input, output) {
  var args = new rataservice_savereference_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.savereference(args.id, args.name, function (err, result) {
    var result = new rataservice_savereference_result((err != null ? err : {success: result}));
    output.writeMessageBegin("savereference", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

rataserviceProcessor.prototype.process_locked = function(seqid, input, output) {
  var args = new rataservice_locked_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.locked(function (err, result) {
    var result = new rataservice_locked_result((err != null ? err : {success: result}));
    output.writeMessageBegin("locked", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

rataserviceProcessor.prototype.process_handleEvent = function(seqid, input, output) {
  var args = new rataservice_handleEvent_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.handleEvent(args.e, function (err, result) {
    var result = new rataservice_handleEvent_result((err != null ? err : {success: result}));
    output.writeMessageBegin("handleEvent", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

rataserviceProcessor.prototype.process_getposition = function(seqid, input, output) {
  var args = new rataservice_getposition_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.getposition(function (err, result) {
    var result = new rataservice_getposition_result((err != null ? err : {success: result}));
    output.writeMessageBegin("getposition", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

rataserviceProcessor.prototype.process_setposition = function(seqid, input, output) {
  var args = new rataservice_setposition_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.setposition(args.coord, function (err, result) {
    var result = new rataservice_setposition_result((err != null ? err : {success: result}));
    output.writeMessageBegin("setposition", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

rataserviceProcessor.prototype.process_reloaddutconfig = function(seqid, input, output) {
  var args = new rataservice_reloaddutconfig_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.reloaddutconfig(args.dutindex, function (err, result) {
    var result = new rataservice_reloaddutconfig_result((err != null ? err : {success: result}));
    output.writeMessageBegin("reloaddutconfig", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

